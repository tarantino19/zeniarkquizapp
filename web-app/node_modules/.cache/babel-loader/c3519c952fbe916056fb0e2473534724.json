{"ast":null,"code":"var _jsxFileName = \"/Users/tarantino/Desktop/zeniark-reactjs-coding-challenge-main/web-app/src/pages/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useContext } from 'react';\nimport { QuizContext } from '../Context/Context';\nimport { Questions } from '../mock-data/questions';\nimport '../styles/main.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Quiz = () => {\n  _s();\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [optionChosen, setOptionChosen] = useState(\"\");\n  let {\n    score,\n    setScore,\n    gameState,\n    setGameState\n  } = useContext(QuizContext);\n\n  const nextQuestion = () => {\n    if (Questions[currentQuestion].correct_answer === optionChosen) {\n      setScore(score + 1);\n    }\n\n    setCurrentQuestion(currentQuestion + 1);\n  };\n\n  const finishQuiz = () => {\n    if (optionChosen === Questions[currentQuestion].correct_answer) {\n      setScore(score + 1);\n    }\n\n    setGameState(\"score\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Category: \", Questions[currentQuestion].category]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: Questions[currentQuestion].question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"true\",\n        onClick: () => {\n          setOptionChosen('True');\n        },\n        children: \"TRUE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"false\",\n        onClick: () => {\n          setOptionChosen('False');\n        },\n        children: \"FALSE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), currentQuestion === Questions.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: finishQuiz,\n      children: \"Finish Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextQuestion,\n      children: \"Next Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Quiz, \"eImUMlcrmX5GPWTlKIBBgA9Wyd0=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useContext","QuizContext","Questions","Quiz","currentQuestion","setCurrentQuestion","optionChosen","setOptionChosen","score","setScore","gameState","setGameState","nextQuestion","correct_answer","finishQuiz","category","question","length"],"sources":["/Users/tarantino/Desktop/zeniark-reactjs-coding-challenge-main/web-app/src/pages/Quiz.js"],"sourcesContent":["import React from 'react';\nimport { useState, useContext } from 'react';\nimport { QuizContext } from '../Context/Context';\nimport { Questions } from '../mock-data/questions';\nimport '../styles/main.scss'\n\nconst Quiz = () => {\n  const [currentQuestion, setCurrentQuestion] = useState (0)\n  const [optionChosen, setOptionChosen] = useState (\"\")\n\n  let {score, setScore, gameState, setGameState} = useContext(QuizContext)\n\n  const nextQuestion = () => {\n    if (Questions[currentQuestion].correct_answer === optionChosen) {\n      setScore (score + 1)\n    }\n    setCurrentQuestion(currentQuestion + 1)\n  }\n\n  const finishQuiz = () => {\n    if (optionChosen === Questions[currentQuestion].correct_answer) {\n      setScore (score+ 1)\n    }\n    setGameState (\"score\")\n  }\n  \n  return (\n    <div className='card'> \n        <h2>Category: {Questions[currentQuestion].category}</h2>\n        <h1>{Questions[currentQuestion].question}</h1>\n        <div className='options'>\n          <button className='true' \n          onClick={() => {setOptionChosen('True')}}\n          >TRUE</button>\n          <button className='false'\n          onClick={() => {setOptionChosen('False')}}\n          >FALSE</button>\n        </div>\n        {currentQuestion === Questions.length - 1 ? (\n          <button onClick={finishQuiz}>Finish Quiz</button>) : (\n          <button onClick={nextQuestion}>Next Question</button>\n          )\n        }\n    </div>\n  );\n}\n\nexport default Quiz;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,OAAO,qBAAP;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAE,CAAF,CAAtD;EACA,MAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAE,EAAF,CAAhD;EAEA,IAAI;IAACS,KAAD;IAAQC,QAAR;IAAkBC,SAAlB;IAA6BC;EAA7B,IAA6CX,UAAU,CAACC,WAAD,CAA3D;;EAEA,MAAMW,YAAY,GAAG,MAAM;IACzB,IAAIV,SAAS,CAACE,eAAD,CAAT,CAA2BS,cAA3B,KAA8CP,YAAlD,EAAgE;MAC9DG,QAAQ,CAAED,KAAK,GAAG,CAAV,CAAR;IACD;;IACDH,kBAAkB,CAACD,eAAe,GAAG,CAAnB,CAAlB;EACD,CALD;;EAOA,MAAMU,UAAU,GAAG,MAAM;IACvB,IAAIR,YAAY,KAAKJ,SAAS,CAACE,eAAD,CAAT,CAA2BS,cAAhD,EAAgE;MAC9DJ,QAAQ,CAAED,KAAK,GAAE,CAAT,CAAR;IACD;;IACDG,YAAY,CAAE,OAAF,CAAZ;EACD,CALD;;EAOA,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,wBACI;MAAA,yBAAeT,SAAS,CAACE,eAAD,CAAT,CAA2BW,QAA1C;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,UAAKb,SAAS,CAACE,eAAD,CAAT,CAA2BY;IAAhC;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAK,SAAS,EAAC,SAAf;MAAA,wBACE;QAAQ,SAAS,EAAC,MAAlB;QACA,OAAO,EAAE,MAAM;UAACT,eAAe,CAAC,MAAD,CAAf;QAAwB,CADxC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAIE;QAAQ,SAAS,EAAC,OAAlB;QACA,OAAO,EAAE,MAAM;UAACA,eAAe,CAAC,OAAD,CAAf;QAAyB,CADzC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,EAWKH,eAAe,KAAKF,SAAS,CAACe,MAAV,GAAmB,CAAvC,gBACC;MAAQ,OAAO,EAAEH,UAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,gBAEC;MAAQ,OAAO,EAAEF,YAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAbN;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CAvCD;;GAAMT,I;;KAAAA,I;AAyCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}